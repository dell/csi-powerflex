# Copyright Â© 2020-2025 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#      http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: { { required "name required " .Values.name } }
  namespace: { { required "namespace required" .Values.namespace } }
spec:
  replicas: { { required "replicas required" .Values.replicas } }
  selector:
    matchLabels:
      app: vxflextest
  template:
    metadata:
      labels:
        app: vxflextest
    spec:
      serviceAccount: vxflextest
      containers:
        - name: test
          image: quay.io/centos/centos:latest
          command: ["/bin/sleep", "3600"]
          volumeMounts:
            - mountPath: "/data0"
              name: pvolx0
            - mountPath: "/data1"
              name: pvolx1
            - mountPath: "/data2"
              name: pvolx2
            - mountPath: "/data3"
              name: pvolx3
            - mountPath: "/data4"
              name: pvolx4
            - mountPath: "/data5"
              name: pvolx5
            - mountPath: "/data6"
              name: pvolx6
            - mountPath: "/data7"
              name: pvolx7
            - mountPath: "/data8"
              name: pvolx8
            - mountPath: "/data9"
              name: pvolx9
  volumeClaimTemplates:
    - metadata:
        name: pvolx0
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx1
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx2
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx3
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx4
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx5
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx6
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx7
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx8
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
    - metadata:
        name: pvolx9
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName:
          { { required "storageClass required" .Values.storageClass } }
        resources:
          requests:
            storage: 8Gi
