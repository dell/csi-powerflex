apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  # name for the storage class
  name: vxflexos
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi-vxflexos.dellemc.com
# reclaimPolicy: PVs that are dynamically created by a StorageClass will have the reclaim policy specified here
# Allowed values:
#   Reclaim: retain the PV after PVC deletion
#   Delete: delete the PV after PVC deletion
# Optional: true
# Default value: Delete
reclaimPolicy: Delete
# allowVolumeExpansion: allows the users to resize the volume by editing the corresponding PVC object
# Allowed values:
#   true: allow users to resize the PVC
#   false: does not allow users to resize the PVC
# Optional: true
# Default value: false
allowVolumeExpansion: true
parameters:
  # Storage pool to use on system
  # Optional: false
  storagepool: <STORAGE_POOL> # Insert Storage pool
  # System you would like this storage class to use
  # Allowed values: one string for system ID
  # Optional: false
  systemID: <SYSTEM_ID> # Insert System ID
  # format options to pass to mkfs
  # Allowed values: A string dictating the fs options you want passed
  # Optional: true
  # Uncomment the line below if you want to use mkfsFormatOption
  # mkfsFormatOption: "<mkfs_format_option>" # Insert file system format option
# volumeBindingMode determines how volume binding and dynamic provisioning should occur
# Allowed values: 
#  Immediate: volume binding and dynamic provisioning occurs once PVC is created
#  WaitForFirstConsumer: delay the binding and provisioning of PV until a pod using the PVC is created.
#  Optional: false
# Default value: WaitForFirstConsumer (required for topology section below) 
volumeBindingMode: WaitForFirstConsumer
# allowedTopologies helps scheduling pods on worker nodes which match all of below expressions.
allowedTopologies:
- matchLabelExpressions:
  - key: csi-vxflexos.dellemc.com/<SYSTEM_ID> # Insert System ID
    values:
    - csi-vxflexos.dellemc.com
