name: Workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  code-check:
    name: Check Go formatting, linting, vetting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Checkout gofsutil
        uses: actions/checkout@v2
        with:
          repository: 'dell/gofsutil'
          path: 'gofsutil'
      - name: Checkout gocsi
        uses: actions/checkout@v2
        with:
          repository: 'dell/gocsi'
          path: 'gocsi'
      - name: Run the formatter, linter, and vetter
        uses: dell/common-github-actions/go-code-formatter-linter-vetter@main
        with:
          directories: ./...
  test:
    name: Run Go unit tests and check package coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout csi-powerflex
        uses: actions/checkout@v2
      - name: Checkout gofsutil
        uses: actions/checkout@v2
        with:
          repository: 'dell/gofsutil'
          path: 'gofsutil'
      - name: Checkout gocsi
        uses: actions/checkout@v2
        with:
          repository: 'dell/gocsi'
          path: 'gocsi'
      - name: Run unit tests and check package coverage
        uses: dell/common-github-actions/go-code-tester@main
        with:
          threshold: 90
          test-folder: "./service"
  go_security_scan:
    name: Go security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Checkout gofsutil
        uses: actions/checkout@v2
        with:
          repository: 'dell/gofsutil'
          path: 'gofsutil'
      - name: Checkout gocsi
        uses: actions/checkout@v2
        with:
          repository: 'dell/gocsi'
          path: 'gocsi'
      - name: Run Go Security
        uses: securego/gosec@master
        with:
          args: -exclude=G304 ./...
  malware_security_scan:
    name: Malware Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Run malware scan
        uses: dell/common-github-actions/malware-scanner@main
        with:
          directories: .
          options: -ri
  image_security_scan:
    name: Image Scanner
    runs-on: ubuntu-latest
    env:
      BASE_IMG : ubuntu:latest
    steps:
      - name: Set up Go 1.17+
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Checkout gofsutil
        uses: actions/checkout@v2
        with:
          repository: 'dell/gofsutil'
          path: 'gofsutil'
      - name: Checkout gocsi
        uses: actions/checkout@v2
        with:
          repository: 'dell/gocsi'
          path: 'gocsi'
      - name: Install Mockgen
        run: go get github.com/golang/mock/mockgen@v1.4.4
      - name: Get dependencies
        run: go mod download
      - name: Build Docker Images
        run: make clean build docker
      - name: Scan driver Image
        uses: Azure/container-scan@v0
        with:
          image-name: localhost/sample_registry/csi-vxflexos:v2.1.0
          severity-threshold: HIGH
